{"version":3,"file":"static/js/268.7430b36e.chunk.js","mappings":"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","sources":["webpack://slim-mom/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.css?4bdd","helpers/getCategoriesByBloodType.jsx","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom/./src/components/DailyCaloriesForm/StartLosingWeightBtn/StartLosingWeightBtn.module.css?ff6e","components/DailyCaloriesForm/StartLosingWeightBtn/StartLosingWeightBtn.jsx","webpack://slim-mom/./src/components/SideBar/SideBar.module.css?3c41","redux/date/selectors.js","webpack://slim-mom/./src/components/Backgrounds/SidebarBackground/SiderbarBackground.module.css?5d4b","components/Backgrounds/SidebarBackground/SidebarBackground.jsx","components/SideBar/SideBar.jsx","helpers/capitalizeFirstLetter.jsx","pages/CalculatorPage/CalculatorPage.module.css","webpack://slim-mom/./src/components/CalculatorCalorieForm/CalculatorCalorieForm.module.css?70c5","components/CalculatorCalorieForm/CalculatorCalorieForm.jsx","pages/CalculatorPage/CalculatorPage.jsx","redux/calculate/selectors.js","redux/loader/selectors.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"DailyCaloriesForm_formBox__nWyvc\",\"form\":\"DailyCaloriesForm_form__Ri71L\",\"titleForm\":\"DailyCaloriesForm_titleForm__+TO9y\",\"leftLabelBox\":\"DailyCaloriesForm_leftLabelBox__q+jXe\",\"rightLabelBox\":\"DailyCaloriesForm_rightLabelBox__yQ8eA\",\"labelForm\":\"DailyCaloriesForm_labelForm__5dhLz\",\"inputForm\":\"DailyCaloriesForm_inputForm__43fzU\",\"labelFormDweight\":\"DailyCaloriesForm_labelFormDweight__o+9g7\",\"bloodTypeBox\":\"DailyCaloriesForm_bloodTypeBox__K1IKu\",\"labelFormBlood\":\"DailyCaloriesForm_labelFormBlood__kd8Ju\",\"radiobuttonBox\":\"DailyCaloriesForm_radiobuttonBox__vXnTU\",\"radiobuttonLabel\":\"DailyCaloriesForm_radiobuttonLabel__1YfNA\",\"radiobutton\":\"DailyCaloriesForm_radiobutton__3Y-j7\",\"bloodTypeValue\":\"DailyCaloriesForm_bloodTypeValue__R48+h\",\"error\":\"DailyCaloriesForm_error__43rGI\",\"loggedIn\":\"DailyCaloriesForm_loggedIn__jlqHZ\",\"titleFormBox\":\"DailyCaloriesForm_titleFormBox__l88dq\",\"btnBox\":\"DailyCaloriesForm_btnBox__wsuAt\"};","const notAllowedCategoriesByBloodType = [\n  {\n    bloodType: '1',\n    categories: [\n      'non-alcoholic beverages',\n      'oils and fats',\n      'smoked products',\n      'alcoholic beverages',\n      'red meat',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'nuts',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '2',\n    categories: [\n      'red meat',\n      'flour products',\n      'oils and fats',\n      'smoked products',\n      'mushrooms',\n      'eggs',\n      'cereals',\n      'non-alcoholic beverages',\n      'alcoholic beverages',\n      'berries',\n      'fish',\n      'fruits',\n      'nuts',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '3',\n    categories: [\n      'nuts',\n      'dairy products',\n      'red meat',\n      'flour products',\n      'non-alcoholic beverages',\n      'eggs',\n      'cereals',\n      'oils and fats',\n      'smoked products',\n      'alcoholic beverages',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '4',\n    categories: [\n      'eggs',\n      'dairy products',\n      'non-alcoholic beverages',\n      'red meat',\n      'alcoholic beverages',\n      'cereals',\n      'oils and fats',\n      'smoked products',\n      'flour products',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n];\n\nexport const getCategoriesByBloodType = bloodType => {\n  return notAllowedCategoriesByBloodType.find(\n    item => item.bloodType === bloodType\n  ).categories;\n};\n","import React from 'react';\nimport styles from './DailyCaloriesForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { calculation } from '../../redux/calculate/operations';\nimport { postSideBarInfo } from '../../redux/products/operations';\nimport { selectCalculateValue } from '../../redux/calculate/selectors';\nimport { selectIsLoggedIn } from '../../redux/auth/selectors';\nimport { addCalories } from '../../redux/calculate/slice';\nimport { bloodTypes } from '../../helpers/constants';\n\nimport { getCategoriesByBloodType } from '../../helpers/getCategoriesByBloodType';\nimport StartLosingWeightBtn from './StartLosingWeightBtn/StartLosingWeightBtn';\n\nfunction DailyCaloriesForm({ onButtonClick }) {\n  const dispatch = useDispatch();\n\n  const { formData } = useSelector(selectCalculateValue);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      height: formData.height,\n      age: formData.age,\n      currentWeight: formData.currentWeight,\n      desiredWeight: formData.desiredWeight,\n      bloodType: formData.bloodType,\n    },\n  });\n\n  const heightValue = watch('height');\n  const ageValue = watch('age');\n  const currentWeightValue = watch('currentWeight');\n  const desiredWeightValue = watch('desiredWeight');\n  const bloodTypeValue = watch('bloodType');\n\n  const onSubmitForm = formData => {\n    const { height, age, currentWeight, desiredWeight, bloodType } = formData;\n    const countedCalories = String(\n      10 * currentWeight +\n        6.25 * height -\n        5 * age -\n        161 -\n        10 * (currentWeight - desiredWeight)\n    );\n\n    const notAllowedFoodCategories = getCategoriesByBloodType(bloodType);\n\n    const dataForDispatch = {\n      calorie: countedCalories,\n      notRecommendedProduct: notAllowedFoodCategories,\n      data: formData,\n    };\n\n    if (isLoggedIn) {\n      dispatch(calculation(dataForDispatch));\n      dispatch(\n        postSideBarInfo({\n          calorie: countedCalories,\n          notRecommendedProduct: notAllowedFoodCategories,\n        })\n      );\n    } else {\n      dispatch(addCalories(dataForDispatch));\n    }\n\n    onButtonClick();\n  };\n\n  return (\n    <div className={`${styles.formBox} ${isLoggedIn ? styles.loggedIn : ''}`}>\n      <div className={styles.titleFormBox}>\n        <h1 className={styles.titleForm}>\n          Calculate your daily calorie intake right now\n        </h1>\n      </div>\n\n      <form\n        id=\"myForm\"\n        className={styles.form}\n        onSubmit={handleSubmit(onSubmitForm)}\n      >\n        <div className={styles.leftLabelBox}>\n          <label className={styles.labelForm}>\n            Height *\n            <input\n              className={styles.inputForm}\n              value={heightValue}\n              type=\"number\"\n              {...register('height', {\n                required: 'Please enter your height',\n                min: {\n                  value: 100,\n                  message: 'Minimum height is 100 cm',\n                },\n                max: {\n                  value: 250,\n                  message: 'Maximum height is 250 cm',\n                },\n              })}\n            />\n            {errors?.height && (\n              <p className={styles.error}>{errors?.height?.message}</p>\n            )}\n          </label>\n          <label className={styles.labelForm}>\n            Age *\n            <input\n              className={styles.inputForm}\n              value={ageValue}\n              type=\"number\"\n              {...register('age', {\n                required: 'Please enter your age',\n                min: {\n                  value: 18,\n                  message: 'Minimum age is 18 years',\n                },\n                max: {\n                  value: 100,\n                  message: 'Maximum age is 100 years',\n                },\n              })}\n            />\n            {errors?.age && (\n              <p className={styles.error}>{errors?.age?.message}</p>\n            )}\n          </label>\n          <label className={styles.labelForm}>\n            Current weight *\n            <input\n              className={styles.inputForm}\n              value={currentWeightValue}\n              type=\"number\"\n              {...register('currentWeight', {\n                required: 'Enter your current weight',\n                min: {\n                  value: 20,\n                  message: 'Minimum weight is 20 kg',\n                },\n                max: {\n                  value: 500,\n                  message: 'Maximum weight is 500 kg',\n                },\n              })}\n            />\n            {errors?.currentWeight && (\n              <p className={styles.error}>{errors?.currentWeight?.message}</p>\n            )}\n          </label>\n        </div>\n\n        <div className={styles.rightLabelBox}>\n          <label className={styles.labelFormDweight}>\n            Desired weight *\n            <input\n              className={styles.inputForm}\n              value={desiredWeightValue}\n              type=\"number\"\n              {...register('desiredWeight', {\n                required: 'Please enter desired weight',\n                min: {\n                  value: 20,\n                  message: 'Minimum weight is 20 kg',\n                },\n                max: {\n                  value: 500,\n                  message: 'Maximum weight is 500 kg',\n                },\n              })}\n            />\n            {errors?.desiredWeight && (\n              <p className={styles.error}>{errors?.desiredWeight?.message}</p>\n            )}\n          </label>\n\n          <div className={styles.bloodTypeBox}>\n            <label className={styles.labelFormBlood}>Blood type * </label>\n            <p className={styles.bloodTypeValue}>{bloodTypeValue}</p>\n\n            <div className={styles.radiobuttonBox}>\n              {bloodTypes.map(type => (\n                <label key={type} className={styles.radiobuttonLabel}>\n                  <input\n                    className={styles.radiobutton}\n                    {...register('bloodType', {\n                      required: 'Choose your blood type',\n                    })}\n                    type=\"radio\"\n                    value={type}\n                  />\n                  {/* <span></span> */}\n                  {type}\n                </label>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {errors?.bloodType && (\n          <p className={styles.error}>{errors?.bloodType?.message}</p>\n        )}\n      </form>\n      <div className={styles.btnBox}>\n        <StartLosingWeightBtn onClick={handleSubmit(onSubmitForm)} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyCaloriesForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonBox\":\"StartLosingWeightBtn_buttonBox__wfeKn\",\"buttonSubmit\":\"StartLosingWeightBtn_buttonSubmit__18r9s\"};","import React from 'react';\nimport styles from './StartLosingWeightBtn.module.css';\n\nfunction StartLosingWeightBtn({ onClick }) {\n  return (\n    <div className={styles.buttonBox}>\n      <button type=\"submit\" className={styles.buttonSubmit} onClick={onClick}>\n        Start losing weight\n      </button>\n    </div>\n  );\n}\n\nexport default StartLosingWeightBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarBox\":\"SideBar_sidebarBox__gs8FI\",\"contentBox\":\"SideBar_contentBox__QFPGc\",\"summaryTitle\":\"SideBar_summaryTitle__p3hMx\",\"summaryTextBox\":\"SideBar_summaryTextBox__hHaSI\",\"summaryTextBoxDetails\":\"SideBar_summaryTextBoxDetails__WbfCD\",\"summaryTextBoxResults\":\"SideBar_summaryTextBoxResults__NJHSW\",\"notRecomandedFoodBoxTitle\":\"SideBar_notRecomandedFoodBoxTitle__CpwzZ\",\"notRecomandedFoodBoxProducts\":\"SideBar_notRecomandedFoodBoxProducts__sGrFA\",\"ifNotCalories\":\"SideBar_ifNotCalories__qRCp2\",\"summaryBox\":\"SideBar_summaryBox__+45WE\",\"notRecommandedFoodBox\":\"SideBar_notRecommandedFoodBox__Bpen5\"};","export const getSelectedDate = state => state.date.selectedDate;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"SiderbarBackground_background__Y3AR0\",\"leaves\":\"SiderbarBackground_leaves__krvud\"};","import React, { useState, useEffect } from 'react';\nimport styles from './SiderbarBackground.module.css';\nimport leaves from '../../../images/pictures/Tablet/tablet-leafs-1x.png';\nimport leavesDesktop from '../../../images/pictures/Desktop/desktop-leafs-1x.png';\n\nfunction SidebarBackground({ children }) {\n  const [clientWidth, setclientWidth] = useState(0);\n\n  const handleResize = () => {\n    const width = document.documentElement.clientWidth;\n    setclientWidth(width);\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className={styles.background}>\n      {clientWidth <= 768 ? null : clientWidth <= 1280 ? (\n        <>\n          <div className={styles.leaves}>\n            <img src={leaves} alt=\"Leaves\" />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={styles.leaves}>\n            <img src={leavesDesktop} alt=\"Leaves\" />\n          </div>\n        </>\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default SidebarBackground;\n","import React from 'react';\nimport styles from './SideBar.module.css';\nimport { useSelector } from 'react-redux';\n\n// import { selectUser } from '../../redux/auth/selectors';\nimport { selectIsLoading } from '../../redux/loader/selectors';\nimport { productsList } from '../../redux/products/selectors';\nimport { selectCalculateValue } from '../../redux/calculate/selectors';\nimport { getSelectedDate } from '../../redux/date/selectors';\nimport { Loader } from '../Loader/Loader';\nimport { capitalizeFirstLetter } from '../../helpers/capitalizeFirstLetter';\nimport { initialDate } from '../../helpers/constants';\nimport SidebarBackground from '../Backgrounds/SidebarBackground/SidebarBackground';\n\nfunction SideBar() {\n  const isLoading = useSelector(selectIsLoading);\n  const selectedDate = useSelector(getSelectedDate);\n  // const { calorie } = useSelector(selectUser);\n\n  const { countedCalories, notAllowedFoodCategories } =\n    useSelector(selectCalculateValue);\n  const products = useSelector(productsList);\n\n  const totalCalories = products\n    .reduce(\n      (accumulator, currentValue) =>\n        accumulator + Number(currentValue.productCalories),\n      0\n    )\n    .toFixed(2);\n  const diffCalories = (Number(countedCalories) - totalCalories).toFixed(2);\n  const percentage = ((totalCalories / Number(countedCalories)) * 100).toFixed(\n    2\n  );\n\n  return (\n    <SidebarBackground>\n      <section className={styles.sidebarBox}>\n        <div className={styles.contentBox}>\n          <div className={styles.summaryBox}>\n            {isLoading ? <Loader /> : null}\n            <div className={styles.summaryTitleBox}>\n              <h2 className={styles.summaryTitle}>\n                Summary for{' '}\n                <span>\n                  {selectedDate\n                    ? selectedDate\n                    : initialDate.split('-').join('.')}\n                </span>\n              </h2>\n            </div>\n            <div className={styles.summaryTextBox}>\n              <ul className={styles.summaryTextBoxDetails}>\n                <li>\n                  <p>\n                    <span>Left</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>Consumed</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>Daily rate</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>n% of normal</span>\n                  </p>\n                </li>\n              </ul>\n\n              <ul className={styles.summaryTextBoxResults}>\n                <li>\n                  <p>\n                    <span> {diffCalories} kcal</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>{totalCalories} kcal</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>{countedCalories ?? 0} kcal</span>\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <span>{isNaN(percentage) ? 0 : percentage} %</span>\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className={styles.notRecomandedFoodBox}>\n            <div className={styles.TitleBox}>\n              <h2 className={styles.notRecomandedFoodBoxTitle}>\n                Food not recommended\n              </h2>\n            </div>\n            {countedCalories ? (\n              <ul className={styles.notRecomandedFoodBoxProducts}>\n                {notAllowedFoodCategories &&\n                  notAllowedFoodCategories.slice(0, 4).map(product => {\n                    return (\n                      <li key={product}>\n                        <p>\n                          <span>{capitalizeFirstLetter(product)}</span>\n                        </p>\n                      </li>\n                    );\n                  })}\n              </ul>\n            ) : (\n              <div className={styles.ifNotCalories}>\n                <p>Your diet will be displayed here</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    </SidebarBackground>\n  );\n}\n\nexport default SideBar;\n","export const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"titleForm\":\"CalculatorCalorieForm_titleForm__6qZLs\",\"labelBox\":\"CalculatorCalorieForm_labelBox__qayxw\",\"labelForm\":\"CalculatorCalorieForm_labelForm__cRWkm\",\"inputForm\":\"CalculatorCalorieForm_inputForm__O8kdI\",\"bloodTypeBox\":\"CalculatorCalorieForm_bloodTypeBox__UrP2t\",\"radiobuttonBox\":\"CalculatorCalorieForm_radiobuttonBox__9FU9s\",\"radiobuttonLabel\":\"CalculatorCalorieForm_radiobuttonLabel__1O4lR\",\"radiobutton\":\"CalculatorCalorieForm_radiobutton__qc7cB\",\"bloodTypeValue\":\"CalculatorCalorieForm_bloodTypeValue__0oCTx\",\"error\":\"CalculatorCalorieForm_error__aobjU\",\"buttonBox\":\"CalculatorCalorieForm_buttonBox__up6yX\",\"buttonSubmit\":\"CalculatorCalorieForm_buttonSubmit__JhNZ3\"};","import React from 'react';\n\nimport styles from './CalculatorCalorieForm.module.css';\nimport DailyCaloriesForm from '../DailyCaloriesForm/DailyCaloriesForm';\n\nfunction CalculatorCalorieForm({ onButtonClick }) {\n  return (\n    <>\n      <div className={styles.calculatorFormBox}>\n        <DailyCaloriesForm onButtonClick={onButtonClick} />\n      </div>\n    </>\n  );\n}\n\nexport default CalculatorCalorieForm;\n","import { React } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './CalculatorPage.module.css';\nimport { routes } from '../../helpers/constants';\n\nimport CalculatorCalorieForm from '../../components/CalculatorCalorieForm/CalculatorCalorieForm';\nimport Sidebar from '../../components/SideBar/SideBar';\n\nfunction CalculatorPage() {\n  const navigate = useNavigate();\n\n  return (\n    <div className={styles.calculatorPageBox}>\n      <CalculatorCalorieForm\n        onButtonClick={() => navigate(routes.diaryToday)}\n      />\n      <Sidebar />\n    </div>\n  );\n}\n\nexport default CalculatorPage;\n","export const selectCalculateValue = state => state.calculate;\n","export const selectIsLoading = state => state.loading.isLoading;\n","export const productsList = state => state.productList.productsDiary;\nexport const sideBarInfoSelectors = state => state.productList.sideBarInfo;\n"],"names":["notAllowedCategoriesByBloodType","bloodType","categories","_ref","_errors$height","_errors$age","_errors$currentWeight","_errors$desiredWeight","_errors$bloodType","onButtonClick","dispatch","useDispatch","formData","useSelector","selectCalculateValue","isLoggedIn","selectIsLoggedIn","_useForm","useForm","mode","defaultValues","height","age","currentWeight","desiredWeight","register","handleSubmit","watch","errors","formState","heightValue","ageValue","currentWeightValue","desiredWeightValue","bloodTypeValue","onSubmitForm","countedCalories","String","notAllowedFoodCategories","find","item","getCategoriesByBloodType","dataForDispatch","calorie","notRecommendedProduct","data","calculation","postSideBarInfo","addCalories","_jsxs","className","concat","styles","children","_jsx","id","onSubmit","_objectSpread","value","type","required","min","message","max","bloodTypes","StartLosingWeightBtn","onClick","getSelectedDate","state","date","selectedDate","_useState","useState","_useState2","_slicedToArray","clientWidth","setclientWidth","handleResize","width","document","documentElement","useEffect","window","addEventListener","_Fragment","src","leaves","alt","leavesDesktop","isLoading","selectIsLoading","_useSelector","totalCalories","productsList","reduce","accumulator","currentValue","Number","productCalories","toFixed","diffCalories","percentage","SidebarBackground","Loader","initialDate","join","isNaN","slice","map","product","string","charAt","toUpperCase","DailyCaloriesForm","navigate","useNavigate","CalculatorCalorieForm","routes","Sidebar","calculate","loading","productList","productsDiary"],"sourceRoot":""}