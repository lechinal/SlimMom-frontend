{"version":3,"file":"static/js/669.1ea13a59.chunk.js","mappings":"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","sources":["webpack://slim-mom/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.css?4bdd","helpers/getCategoriesByBloodType.jsx","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom/./src/components/DailyCaloriesForm/StartLosingWeightBtn/StartLosingWeightBtn.module.css?ff6e","components/DailyCaloriesForm/StartLosingWeightBtn/StartLosingWeightBtn.jsx","pages/MainPage/MainPage.module.css","webpack://slim-mom/./src/components/DailyCalorieIntake/DailyCalorieIntake.module.css?254a","webpack://slim-mom/./src/components/DailyCalorieIntake/GoBackBtn/GoBackBtn.module.css?e919","components/DailyCalorieIntake/GoBackBtn/GoBackBtn.jsx","components/DailyCalorieIntake/DailyCalorieIntake.jsx","webpack://slim-mom/./src/components/ModalDailyIntake/ModalDailyIntake.module.css?f717","components/ModalDailyIntake/ModalDailyIntake.jsx","pages/MainPage/MainPage.jsx","redux/calculate/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"DailyCaloriesForm_formBox__nWyvc\",\"form\":\"DailyCaloriesForm_form__Ri71L\",\"titleForm\":\"DailyCaloriesForm_titleForm__+TO9y\",\"leftLabelBox\":\"DailyCaloriesForm_leftLabelBox__q+jXe\",\"rightLabelBox\":\"DailyCaloriesForm_rightLabelBox__yQ8eA\",\"labelForm\":\"DailyCaloriesForm_labelForm__5dhLz\",\"inputForm\":\"DailyCaloriesForm_inputForm__43fzU\",\"labelFormDweight\":\"DailyCaloriesForm_labelFormDweight__o+9g7\",\"bloodTypeBox\":\"DailyCaloriesForm_bloodTypeBox__K1IKu\",\"labelFormBlood\":\"DailyCaloriesForm_labelFormBlood__kd8Ju\",\"radiobuttonBox\":\"DailyCaloriesForm_radiobuttonBox__vXnTU\",\"radiobuttonLabel\":\"DailyCaloriesForm_radiobuttonLabel__1YfNA\",\"radiobutton\":\"DailyCaloriesForm_radiobutton__3Y-j7\",\"bloodTypeValue\":\"DailyCaloriesForm_bloodTypeValue__R48+h\",\"error\":\"DailyCaloriesForm_error__43rGI\",\"loggedIn\":\"DailyCaloriesForm_loggedIn__jlqHZ\",\"titleFormBox\":\"DailyCaloriesForm_titleFormBox__l88dq\",\"btnBox\":\"DailyCaloriesForm_btnBox__wsuAt\"};","const notAllowedCategoriesByBloodType = [\n  {\n    bloodType: '1',\n    categories: [\n      'non-alcoholic beverages',\n      'oils and fats',\n      'smoked products',\n      'alcoholic beverages',\n      'red meat',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'nuts',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '2',\n    categories: [\n      'red meat',\n      'flour products',\n      'oils and fats',\n      'smoked products',\n      'mushrooms',\n      'eggs',\n      'cereals',\n      'non-alcoholic beverages',\n      'alcoholic beverages',\n      'berries',\n      'fish',\n      'fruits',\n      'nuts',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '3',\n    categories: [\n      'nuts',\n      'dairy products',\n      'red meat',\n      'flour products',\n      'non-alcoholic beverages',\n      'eggs',\n      'cereals',\n      'oils and fats',\n      'smoked products',\n      'alcoholic beverages',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n  {\n    bloodType: '4',\n    categories: [\n      'eggs',\n      'dairy products',\n      'non-alcoholic beverages',\n      'red meat',\n      'alcoholic beverages',\n      'cereals',\n      'oils and fats',\n      'smoked products',\n      'flour products',\n      'berries',\n      'fish',\n      'fruits',\n      'mushrooms',\n      'dried fruits',\n      'vegetables and greens',\n      'seeds',\n      'sesame',\n      'poppy',\n    ],\n  },\n];\n\nexport const getCategoriesByBloodType = bloodType => {\n  return notAllowedCategoriesByBloodType.find(\n    item => item.bloodType === bloodType\n  ).categories;\n};\n","import React from 'react';\nimport styles from './DailyCaloriesForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { calculation } from '../../redux/calculate/operations';\nimport { postSideBarInfo } from '../../redux/products/operations';\nimport { selectCalculateValue } from '../../redux/calculate/selectors';\nimport { selectIsLoggedIn } from '../../redux/auth/selectors';\nimport { addCalories } from '../../redux/calculate/slice';\nimport { bloodTypes } from '../../helpers/constants';\n\nimport { getCategoriesByBloodType } from '../../helpers/getCategoriesByBloodType';\nimport StartLosingWeightBtn from './StartLosingWeightBtn/StartLosingWeightBtn';\n\nfunction DailyCaloriesForm({ onButtonClick }) {\n  const dispatch = useDispatch();\n\n  const { formData } = useSelector(selectCalculateValue);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      height: formData.height,\n      age: formData.age,\n      currentWeight: formData.currentWeight,\n      desiredWeight: formData.desiredWeight,\n      bloodType: formData.bloodType,\n    },\n  });\n\n  const heightValue = watch('height');\n  const ageValue = watch('age');\n  const currentWeightValue = watch('currentWeight');\n  const desiredWeightValue = watch('desiredWeight');\n  const bloodTypeValue = watch('bloodType');\n\n  const onSubmitForm = formData => {\n    const { height, age, currentWeight, desiredWeight, bloodType } = formData;\n    const countedCalories = String(\n      10 * currentWeight +\n        6.25 * height -\n        5 * age -\n        161 -\n        10 * (currentWeight - desiredWeight)\n    );\n\n    const notAllowedFoodCategories = getCategoriesByBloodType(bloodType);\n\n    const dataForDispatch = {\n      calorie: countedCalories,\n      notRecommendedProduct: notAllowedFoodCategories,\n      data: formData,\n    };\n\n    if (isLoggedIn) {\n      dispatch(calculation(dataForDispatch));\n      dispatch(\n        postSideBarInfo({\n          calorie: countedCalories,\n          notRecommendedProduct: notAllowedFoodCategories,\n        })\n      );\n    } else {\n      dispatch(addCalories(dataForDispatch));\n    }\n\n    onButtonClick();\n  };\n\n  return (\n    <div className={`${styles.formBox} ${isLoggedIn ? styles.loggedIn : ''}`}>\n      <div className={styles.titleFormBox}>\n        <h1 className={styles.titleForm}>\n          Calculate your daily calorie intake right now\n        </h1>\n      </div>\n\n      <form\n        id=\"myForm\"\n        className={styles.form}\n        onSubmit={handleSubmit(onSubmitForm)}\n      >\n        <div className={styles.leftLabelBox}>\n          <label className={styles.labelForm}>\n            Height *\n            <input\n              className={styles.inputForm}\n              value={heightValue}\n              type=\"number\"\n              {...register('height', {\n                required: 'Please enter your height',\n                min: {\n                  value: 100,\n                  message: 'Minimum height is 100 cm',\n                },\n                max: {\n                  value: 250,\n                  message: 'Maximum height is 250 cm',\n                },\n              })}\n            />\n            {errors?.height && (\n              <p className={styles.error}>{errors?.height?.message}</p>\n            )}\n          </label>\n          <label className={styles.labelForm}>\n            Age *\n            <input\n              className={styles.inputForm}\n              value={ageValue}\n              type=\"number\"\n              {...register('age', {\n                required: 'Please enter your age',\n                min: {\n                  value: 18,\n                  message: 'Minimum age is 18 years',\n                },\n                max: {\n                  value: 100,\n                  message: 'Maximum age is 100 years',\n                },\n              })}\n            />\n            {errors?.age && (\n              <p className={styles.error}>{errors?.age?.message}</p>\n            )}\n          </label>\n          <label className={styles.labelForm}>\n            Current weight *\n            <input\n              className={styles.inputForm}\n              value={currentWeightValue}\n              type=\"number\"\n              {...register('currentWeight', {\n                required: 'Enter your current weight',\n                min: {\n                  value: 20,\n                  message: 'Minimum weight is 20 kg',\n                },\n                max: {\n                  value: 500,\n                  message: 'Maximum weight is 500 kg',\n                },\n              })}\n            />\n            {errors?.currentWeight && (\n              <p className={styles.error}>{errors?.currentWeight?.message}</p>\n            )}\n          </label>\n        </div>\n\n        <div className={styles.rightLabelBox}>\n          <label className={styles.labelFormDweight}>\n            Desired weight *\n            <input\n              className={styles.inputForm}\n              value={desiredWeightValue}\n              type=\"number\"\n              {...register('desiredWeight', {\n                required: 'Please enter desired weight',\n                min: {\n                  value: 20,\n                  message: 'Minimum weight is 20 kg',\n                },\n                max: {\n                  value: 500,\n                  message: 'Maximum weight is 500 kg',\n                },\n              })}\n            />\n            {errors?.desiredWeight && (\n              <p className={styles.error}>{errors?.desiredWeight?.message}</p>\n            )}\n          </label>\n\n          <div className={styles.bloodTypeBox}>\n            <label className={styles.labelFormBlood}>Blood type * </label>\n            <p className={styles.bloodTypeValue}>{bloodTypeValue}</p>\n\n            <div className={styles.radiobuttonBox}>\n              {bloodTypes.map(type => (\n                <label key={type} className={styles.radiobuttonLabel}>\n                  <input\n                    className={styles.radiobutton}\n                    {...register('bloodType', {\n                      required: 'Choose your blood type',\n                    })}\n                    type=\"radio\"\n                    value={type}\n                  />\n                  {/* <span></span> */}\n                  {type}\n                </label>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {errors?.bloodType && (\n          <p className={styles.error}>{errors?.bloodType?.message}</p>\n        )}\n      </form>\n      <div className={styles.btnBox}>\n        <StartLosingWeightBtn onClick={handleSubmit(onSubmitForm)} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyCaloriesForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonBox\":\"StartLosingWeightBtn_buttonBox__wfeKn\",\"buttonSubmit\":\"StartLosingWeightBtn_buttonSubmit__18r9s\"};","import React from 'react';\nimport styles from './StartLosingWeightBtn.module.css';\n\nfunction StartLosingWeightBtn({ onClick }) {\n  return (\n    <div className={styles.buttonBox}>\n      <button type=\"submit\" className={styles.buttonSubmit} onClick={onClick}>\n        Start losing weight\n      </button>\n    </div>\n  );\n}\n\nexport default StartLosingWeightBtn;\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"intakeBox\":\"DailyCalorieIntake_intakeBox__yDMIU\",\"intakeTitle\":\"DailyCalorieIntake_intakeTitle__SOaaV\",\"intakeCaloriesBox\":\"DailyCalorieIntake_intakeCaloriesBox__zzqLz\",\"intakeCaloriesText\":\"DailyCalorieIntake_intakeCaloriesText__FwPRc\",\"intakeCaloriesSpan\":\"DailyCalorieIntake_intakeCaloriesSpan__xoFE+\",\"intakeSubTitle\":\"DailyCalorieIntake_intakeSubTitle__6p0aT\",\"intakeNotAllowed\":\"DailyCalorieIntake_intakeNotAllowed__dWnGu\",\"notAllowedFoodBox\":\"DailyCalorieIntake_notAllowedFoodBox__J3nof\"};","// extracted by mini-css-extract-plugin\nexport default {\"goBackBtnBox\":\"GoBackBtn_goBackBtnBox__92KFZ\",\"goBackBtn\":\"GoBackBtn_goBackBtn__Ksr3g\",\"goBackBtnIcon\":\"GoBackBtn_goBackBtnIcon__zE5Kc\"};","import React from 'react';\nimport styles from './GoBackBtn.module.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction GoBackBtn() {\n  const navigate = useNavigate();\n\n  const handleGoBackClick = () => {\n    navigate('/calculate');\n  };\n\n  return (\n    <div className={styles.goBackBtnBox}>\n      <button className={styles.goBackBtn} onClick={handleGoBackClick}>\n        <svg\n          className={styles.goBackBtnIcon}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"15\"\n          height=\"9\"\n          viewBox=\"0 0 15 9\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\n            stroke=\"black\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default GoBackBtn;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nimport styles from './DailyCalorieIntake.module.css';\n\nimport GoBackBtn from './GoBackBtn/GoBackBtn';\nimport { selectCalculateValue } from '../../redux/calculate/selectors';\nimport StartLosingWeightBtn from '../DailyCaloriesForm/StartLosingWeightBtn/StartLosingWeightBtn';\n\nfunction DailyCalorieIntake() {\n  const { countedCalories: calories, notAllowedFoodCategories } =\n    useSelector(selectCalculateValue);\n\n  const navigate = useNavigate();\n\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 768 });\n\n  const handleButtonClick = () => {\n    navigate('/login');\n  };\n\n  return (\n    <>\n      {!isDesktopOrLaptop && <GoBackBtn />}\n      <div className={styles.intakeBox}>\n        <h1 className={styles.intakeTitle}>\n          Your recommended daily calorie intake is\n        </h1>\n        <div className={styles.intakeCaloriesBox}>\n          <p className={styles.intakeCaloriesText}>\n            {calories ? (\n              <>\n                {Math.round(calories)}{' '}\n                <span className={styles.intakeCaloriesSpan}>kcal</span>\n              </>\n            ) : null}\n          </p>\n        </div>\n        <div className={styles.notAllowedFoodBox}>\n          <h2 className={styles.intakeSubTitle}>Foods you should not eat</h2>\n          <ol className={styles.intakeNotAllowed}>\n            {notAllowedFoodCategories &&\n              notAllowedFoodCategories.slice(0, 5).map(categorie => {\n                return (\n                  <li\n                    className={styles.intakeNotAllowedElement}\n                    key={categorie}\n                  >\n                    {categorie.charAt(0).toUpperCase() + categorie.slice(1)}\n                  </li>\n                );\n              })}\n          </ol>\n        </div>\n      </div>\n      <StartLosingWeightBtn onClick={handleButtonClick} />\n    </>\n  );\n}\n\nexport default DailyCalorieIntake;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalDailyIntake_modal__ZKIPe\",\"modalContent\":\"ModalDailyIntake_modalContent__PHgwJ\",\"closeBtn\":\"ModalDailyIntake_closeBtn__2RF57\"};","import React from 'react';\nimport styles from './ModalDailyIntake.module.css';\n// import Wrapper from '../Wrapper/Wrapper';\nimport closeBtn from '../../images/icons/close-cross.svg';\n\nfunction ModalDailyIntake({ children, onClose }) {\n  return (\n    // <Wrapper>\n    <div className={styles.modal}>\n      <div className={styles.modalContent}>\n        {children}\n        <button className={styles.closeBtn} onClick={onClose}>\n          <img src={closeBtn} alt=\"Close\" />\n        </button>\n      </div>\n    </div>\n    // </Wrapper>\n  );\n}\n\nexport default ModalDailyIntake;\n","import { React, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport styles from './MainPage.module.css';\n\nimport DailyCaloriesForm from '../../components/DailyCaloriesForm/DailyCaloriesForm';\nimport DailyCalorieIntake from '../../components/DailyCalorieIntake/DailyCalorieIntake';\nimport ModalDailyIntake from 'components/ModalDailyIntake/ModalDailyIntake';\n\nfunction MainPage() {\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 768 });\n\n  const handleButtonClick = () => {\n    setIsButtonClicked(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsButtonClicked(false);\n  };\n\n  return (\n    <div className={styles.mainPage}>\n      {isButtonClicked && isDesktopOrLaptop && (\n        <ModalDailyIntake onClose={handleCloseModal}>\n          <DailyCalorieIntake />\n        </ModalDailyIntake>\n      )}\n      {!isDesktopOrLaptop && isButtonClicked ? (\n        <DailyCalorieIntake />\n      ) : (\n        <DailyCaloriesForm onButtonClick={handleButtonClick} />\n      )}\n    </div>\n  );\n}\n\nexport default MainPage;\n","export const selectCalculateValue = state => state.calculate;\n"],"names":["notAllowedCategoriesByBloodType","bloodType","categories","_ref","_errors$height","_errors$age","_errors$currentWeight","_errors$desiredWeight","_errors$bloodType","onButtonClick","dispatch","useDispatch","formData","useSelector","selectCalculateValue","isLoggedIn","selectIsLoggedIn","_useForm","useForm","mode","defaultValues","height","age","currentWeight","desiredWeight","register","handleSubmit","watch","errors","formState","heightValue","ageValue","currentWeightValue","desiredWeightValue","bloodTypeValue","onSubmitForm","countedCalories","String","notAllowedFoodCategories","find","item","getCategoriesByBloodType","dataForDispatch","calorie","notRecommendedProduct","data","calculation","postSideBarInfo","addCalories","_jsxs","className","concat","styles","children","_jsx","id","onSubmit","_objectSpread","value","type","required","min","message","max","bloodTypes","StartLosingWeightBtn","onClick","navigate","useNavigate","xmlns","width","viewBox","fill","d","stroke","strokeWidth","_useSelector","calories","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","_Fragment","GoBackBtn","Math","round","slice","map","categorie","charAt","toUpperCase","onClose","src","closeBtn","alt","_useState","useState","_useState2","_slicedToArray","isButtonClicked","setIsButtonClicked","ModalDailyIntake","DailyCalorieIntake","DailyCaloriesForm","state","calculate"],"sourceRoot":""}