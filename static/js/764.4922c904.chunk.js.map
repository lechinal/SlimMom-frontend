{"version":3,"file":"static/js/764.4922c904.chunk.js","mappings":"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","sources":["webpack://slim-mom/./src/components/Backgrounds/RegistrationBackground/RegistrationBackground.module.css?164a","components/Backgrounds/RegistrationBackground/RegistrationBackground.jsx","webpack://slim-mom/./src/pages/RegistrationPage/RegistrationPage.module.css?b753","pages/RegistrationPage/RegistrationPage.jsx","redux/calculate/selectors.js","redux/loader/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"RegistrationBackground_background__C+cVd\",\"strawberry\":\"RegistrationBackground_strawberry__1xabC\",\"banana\":\"RegistrationBackground_banana__cAOzy\",\"leaves\":\"RegistrationBackground_leaves__WD32F\"};","import React, { useState, useEffect } from 'react';\nimport styles from './RegistrationBackground.module.css';\n\nimport strawberry from '../../../images/pictures/Tablet/Strawberry-Big-PNG.png';\nimport banana from '../../../images/pictures/Desktop/desktop-banana-1x.png';\nimport leaves from '../../../images/pictures/Tablet/tablet-leaves-flipped-1x.png';\nimport leavesDesktop from '../../../images/pictures/Desktop/desktop-leafs-1x.png';\n\nfunction RegistrationBackground({ children }) {\n  const [clientWidth, setclientWidth] = useState(0);\n\n  const handleResize = () => {\n    const width = document.documentElement.clientWidth;\n    setclientWidth(width);\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <section className={styles.background}>\n      {clientWidth <= 768 ? null : clientWidth <= 1280 ? (\n        <>\n          <div className={styles.leaves}>\n            <img src={leaves} alt=\"Leaves\" />\n          </div>\n\n          <div className={styles.banana}>\n            <img src={banana} alt=\"Banana\" />\n          </div>\n\n          <div className={styles.strawberry}>\n            <img src={strawberry} alt=\"Strawberry\" />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={styles.leaves}>\n            <img src={leavesDesktop} alt=\"Leaves\" />\n          </div>\n\n          <div className={styles.banana}>\n            <img src={banana} alt=\"Banana\" />\n          </div>\n\n          <div className={styles.strawberry}>\n            <img src={strawberry} alt=\"Strawberry\" />\n          </div>\n        </>\n      )}\n      {children}\n    </section>\n  );\n}\n\nexport default RegistrationBackground;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFormBox\":\"RegistrationPage_titleFormBox__iAJg6\",\"titleForm\":\"RegistrationPage_titleForm__E+5n0\",\"labelBox\":\"RegistrationPage_labelBox__VEOX1\",\"labelForm\":\"RegistrationPage_labelForm__pmYXE\",\"inputForm\":\"RegistrationPage_inputForm__U31UV\",\"buttonsBox\":\"RegistrationPage_buttonsBox__EeqgJ\",\"buttonLogin\":\"RegistrationPage_buttonLogin__5LsJT\",\"buttonRegister\":\"RegistrationPage_buttonRegister__73BcE\",\"error\":\"RegistrationPage_error__-pFp8\",\"form\":\"RegistrationPage_form__enUF+\",\"registerFormBox\":\"RegistrationPage_registerFormBox__i47O+\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { registration } from '../../redux/auth/operations';\nimport { selectIsLoading } from '../../redux/loader/selectors';\nimport { selectCalculateValue } from '../../redux/calculate/selectors';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport RegistrationBackground from '../../components/Backgrounds/RegistrationBackground/RegistrationBackground';\nimport styles from './RegistrationPage.module.css';\n\nfunction RegistrationPage() {\n  const dispatch = useDispatch();\n  const calculateAndCalorieData = useSelector(selectCalculateValue);\n  const isLoading = useSelector(selectIsLoading);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const nameValue = watch('name');\n  const emailValue = watch('email');\n  const passwordValue = watch('password');\n\n  const onSubmitForm = async registrationData => {\n    const { name, email, password } = registrationData;\n\n    if (calculateAndCalorieData?.countedCalories) {\n      const { countedCalories, notAllowedFoodCategories, formData } =\n        calculateAndCalorieData;\n      const dataForDispatch = {\n        name,\n        email: email.toLowerCase(),\n        password,\n        calorie: countedCalories,\n        data: formData,\n        notRecommendedProduct: notAllowedFoodCategories,\n      };\n      const result = await dispatch(registration(dataForDispatch));\n\n      toast.error(result.payload.message);\n    } else {\n      const result = await dispatch(\n        registration({\n          name,\n          email: email.toLowerCase(),\n          password,\n        })\n      );\n\n      toast.error(result.payload.message);\n    }\n    reset();\n  };\n\n  const navigate = useNavigate();\n\n  return (\n    <RegistrationBackground>\n      {isLoading ? <Loader /> : null}\n      <div className={styles.registerFormBox}>\n        <form className={styles.form} onSubmit={handleSubmit(onSubmitForm)}>\n          <div className={styles.titleFormBox}>\n            <h1 className={styles.titleForm}>Register</h1>\n          </div>\n\n          <div className={styles.labelBox}>\n            <label className={styles.labelForm}>\n              Name *\n              <input\n                className={styles.inputForm}\n                value={nameValue}\n                type=\"text\"\n                {...register('name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your name',\n                  },\n                  minLength: {\n                    value: 3,\n                    message: 'Name must be at least 3 characters',\n                  },\n                  maxLength: {\n                    value: 254,\n                    message: 'Name must not exceed 254 characters',\n                  },\n                })}\n              />\n              {errors.name && (\n                <p className={styles.error}>{errors.name?.message}</p>\n              )}\n            </label>\n\n            <label className={styles.labelForm}>\n              Email *\n              <input\n                className={styles.inputForm}\n                value={emailValue}\n                type=\"email\"\n                {...register('email', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your email address',\n                  },\n                  pattern: {\n                    value:\n                      /^([A-Za-z0-9_-]+\\.)*[A-Za-z0-9_-]+@[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*\\.[A-Za-z]{2,6}$/,\n                    message: 'Invalid email format',\n                  },\n                  minLength: {\n                    value: 3,\n                    message: 'Email must be at least 3 characters',\n                  },\n                  maxLength: {\n                    value: 254,\n                    message: 'Email must not exceed 254 characters',\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className={styles.error}>{errors.email?.message}</p>\n              )}\n            </label>\n\n            <label className={styles.labelForm}>\n              Password *\n              <input\n                className={styles.inputForm}\n                value={passwordValue}\n                type=\"password\"\n                {...register('password', {\n                  minLength: {\n                    value: 8,\n                    message: 'Your password must be at least 8 characters',\n                  },\n                  maxLength: {\n                    value: 100,\n                    message: 'Your password must not exceed 100 characters',\n                  },\n                  required: {\n                    value: true,\n                    message: 'Please enter your password',\n                  },\n                  pattern: {\n                    value: /(?=.*[A-Za-z])(?=.*[0-9])/,\n                    message: 'Password must include letters and numbers',\n                  },\n                })}\n              />\n              {errors.password && (\n                <p className={styles.error}>{errors.password?.message}</p>\n              )}\n            </label>\n          </div>\n\n          <div className={styles.buttonsBox}>\n            <button className={styles.buttonRegister} type=\"submit\">\n              Register\n            </button>\n            <button\n              type=\"button\"\n              className={styles.buttonLogin}\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </button>\n          </div>\n        </form>\n      </div>\n    </RegistrationBackground>\n  );\n}\n\nexport default RegistrationPage;\n","export const selectCalculateValue = state => state.calculate;\n","export const selectIsLoading = state => state.loading.isLoading;\n"],"names":["_ref","children","_useState","useState","_useState2","_slicedToArray","clientWidth","setclientWidth","handleResize","width","document","documentElement","useEffect","window","addEventListener","_jsxs","className","styles","_Fragment","_jsx","src","leaves","alt","banana","strawberry","leavesDesktop","_errors$name","_errors$email","_errors$password","dispatch","useDispatch","calculateAndCalorieData","useSelector","selectCalculateValue","isLoading","selectIsLoading","_useForm","useForm","defaultValues","name","email","password","register","handleSubmit","reset","watch","errors","formState","nameValue","emailValue","passwordValue","onSubmitForm","_asyncToGenerator","_regeneratorRuntime","_callee","registrationData","countedCalories","notAllowedFoodCategories","formData","dataForDispatch","result","_result","_context","prev","next","toLowerCase","calorie","data","notRecommendedProduct","registration","sent","toast","payload","message","stop","_x","apply","arguments","navigate","useNavigate","RegistrationBackground","Loader","onSubmit","_objectSpread","value","type","required","minLength","maxLength","pattern","onClick","state","calculate","loading"],"sourceRoot":""}