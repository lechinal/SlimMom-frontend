{"version":3,"file":"static/js/848.07ab101d.chunk.js","mappings":"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","sources":["webpack://slim-mom/./src/components/Backgrounds/LoginBackground/LoginBackground.module.css?607a","components/Backgrounds/LoginBackground/LoginBackground.jsx","webpack://slim-mom/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","redux/loader/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"LoginBackground_background__fkrBt\",\"strawberry\":\"LoginBackground_strawberry__FfJkM\",\"banana\":\"LoginBackground_banana__yYLjO\",\"leaves\":\"LoginBackground_leaves__m-drt\"};","import React, { useState, useEffect } from 'react';\nimport styles from './LoginBackground.module.css';\n\nimport strawberry from '../../../images/pictures/Tablet/Strawberry-Big-PNG.png';\nimport banana from '../../../images/pictures/Desktop/desktop-banana-1x.png';\nimport leaves from '../../../images/pictures/Tablet/tablet-leaves-flipped-1x.png';\nimport leavesDesktop from '../../../images/pictures/Desktop/desktop-leafs-1x.png';\n\nfunction LoginBackground({ children }) {\n  const [clientWidth, setclientWidth] = useState(0);\n\n  const handleResize = () => {\n    const width = document.documentElement.clientWidth;\n    setclientWidth(width);\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <section className={styles.background}>\n      {clientWidth <= 768 ? null : clientWidth <= 1280 ? (\n        <>\n          <div className={styles.leaves}>\n            <img src={leaves} alt=\"Leaves\" />\n          </div>\n\n          <div className={styles.banana}>\n            <img src={banana} alt=\"Banana\" />\n          </div>\n\n          <div className={styles.strawberry}>\n            <img src={strawberry} alt=\"Strawberry\" />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={styles.leaves}>\n            <img src={leavesDesktop} alt=\"Leaves\" />\n          </div>\n\n          <div className={styles.banana}>\n            <img src={banana} alt=\"Banana\" />\n          </div>\n\n          <div className={styles.strawberry}>\n            <img src={strawberry} alt=\"Strawberry\" />\n          </div>\n        </>\n      )}\n      {children}\n    </section>\n  );\n}\n\nexport default LoginBackground;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFormBox\":\"LoginPage_titleFormBox__kwvyP\",\"titleForm\":\"LoginPage_titleForm__+SnbD\",\"labelBox\":\"LoginPage_labelBox__uk9Q1\",\"labelForm\":\"LoginPage_labelForm__75B+p\",\"inputForm\":\"LoginPage_inputForm__Hk21b\",\"buttonsBox\":\"LoginPage_buttonsBox__RAq5r\",\"buttonLogin\":\"LoginPage_buttonLogin__-eMNr\",\"buttonRegister\":\"LoginPage_buttonRegister__ofroF\",\"error\":\"LoginPage_error__XDQcQ\",\"form\":\"LoginPage_form__h3Le9\",\"signinFormBox\":\"LoginPage_signinFormBox__N+pV8\"};","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { login } from '../../redux/auth/operations';\nimport { selectIsLoading } from '../../redux/loader/selectors';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport LoginBackground from '../../components/Backgrounds/LoginBackground/LoginBackground';\nimport styles from './LoginPage.module.css';\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm({ defaultValues: { email: '', password: '' } });\n\n  const emailValue = watch('email');\n  const passwordValue = watch('password');\n\n  const onSubmitForm = async credentials => {\n    const { email, password } = credentials;\n    const result = await dispatch(\n      login({\n        email: email.toLowerCase(),\n        password,\n      })\n    );\n    toast.error(result.payload.message);\n    reset();\n  };\n\n  const navigate = useNavigate();\n\n  return (\n    <LoginBackground>\n      {isLoading ? <Loader /> : null}\n      <div className={styles.signinFormBox}>\n        <form className={styles.form} onSubmit={handleSubmit(onSubmitForm)}>\n          <div className={styles.titleFormBox}>\n            <h1 className={styles.titleForm}>Log In</h1>\n          </div>\n          <div className={styles.labelBox}>\n            <label className={styles.labelForm}>\n              Email *\n              <input\n                className={styles.inputForm}\n                value={emailValue}\n                type=\"email\"\n                {...register('email', {\n                  required: 'Please enter your email',\n                  pattern: {\n                    value:\n                      /^([A-Za-z0-9_-]+\\.)*[A-Za-z0-9_-]+@[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*\\.[A-Za-z]{2,6}$/,\n                    message: 'Invalid email format',\n                  },\n                  minLength: {\n                    value: 3,\n                    message: 'Email must be at least 3 characters',\n                  },\n                  maxLength: {\n                    value: 254,\n                    message: 'Email must not exceed 254 characters',\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className={styles.error}>{errors.email?.message}</p>\n              )}\n            </label>\n\n            <label className={styles.labelForm}>\n              Password *\n              <input\n                className={styles.inputForm}\n                value={passwordValue}\n                type=\"password\"\n                {...register('password', {\n                  minLength: {\n                    value: 8,\n                    message: 'Password must be at least 8 characters',\n                  },\n                  maxLength: {\n                    value: 100,\n                    message: 'Password must not exceed 100 characters',\n                  },\n                  required: 'Please enter your password',\n                  pattern: {\n                    value: /(?=.*[A-Za-z])(?=.*[0-9])/,\n                    message: 'Password must include letters and numbers',\n                  },\n                })}\n              />\n              {errors.password && (\n                <p className={styles.error}>{errors.password?.message}</p>\n              )}\n            </label>\n          </div>\n          <div className={styles.buttonsBox}>\n            <button className={styles.buttonLogin} type=\"submit\">\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              className={styles.buttonRegister}\n              onClick={() => navigate('/signup')}\n            >\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </LoginBackground>\n  );\n}\n\nexport default LoginPage;\n","export const selectIsLoading = state => state.loading.isLoading;\n"],"names":["_ref","children","_useState","useState","_useState2","_slicedToArray","clientWidth","setclientWidth","handleResize","width","document","documentElement","useEffect","window","addEventListener","_jsxs","className","styles","_Fragment","_jsx","src","leaves","alt","banana","strawberry","leavesDesktop","_errors$email","_errors$password","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","_useForm","useForm","defaultValues","email","password","register","handleSubmit","reset","watch","errors","formState","emailValue","passwordValue","onSubmitForm","_asyncToGenerator","_regeneratorRuntime","_callee","credentials","result","_context","prev","next","login","toLowerCase","sent","toast","payload","message","stop","_x","apply","arguments","navigate","useNavigate","LoginBackground","Loader","onSubmit","_objectSpread","value","type","required","pattern","minLength","maxLength","onClick","state","loading"],"sourceRoot":""}